// Generated by CoffeeScript 1.10.0
var init, isDragging, opacityTuple, ref, updateOpacity;

ref = [null, null], isDragging = ref[0], opacityTuple = ref[1];

updateOpacity = function() {
  $('.link.predefined').css('opacity', opacityTuple[0]);
  $('.link.attributeBased').css('opacity', opacityTuple[1]);
  $('.link.hybrid').css('opacity', opacityTuple[2]);
};

init = function() {
  var slider;
  console.log('HP initialized');
  opacityTuple = [.7, .7, .7];
  updateOpacity();
  $('#handle-bottom').mousedown(function(event) {
    var thisbottom, y;
    event.preventDefault();
    event.stopPropagation();
    thisbottom = parseInt($(this).css('bottom'));
    y = event.pageY;
    $(document).on('mousemove.dragging', function(event) {
      var ry;
      ry = event.pageY - y;
      $('.navbar-fixed-bottom').css('height', thisbottom - ry);
      $('#handle-bottom').css('bottom', thisbottom - ry);
      $('#visCanvas').css('bottom', thisbottom - ry + 24);
      $('#rightPanelTop').css('bottom', thisbottom - ry + 24);
      $('#bottom-left-toolbar').css('bottom', thisbottom - ry + 24 * 2);
      $('#linkingCriteriaSuggestionContainer').css('height', thisbottom - ry - 60);
      $('#activeQueryContainer').css('height', thisbottom - ry - 60);
    }).on('mouseup.dragging mouseleave.dragging', function(event) {
      $(document).off('.dragging');
    });
  });
  $('#bottom-left-toolbar > button').tooltip({
    'placement': 'right',
    'trigger': 'hover'
  });
  $('#toggle-opacity').click(function(event) {
    $('#opacity-control').toggleClass('hidden');
  });
  slider = new Slider('#ex1', {
    formatter: function(value) {
      return 'Current opacity: ' + value + '%';
    }
  });
  slider.on('slide', function(sliderValue) {
    opacityTuple[0] = sliderValue / 100;
    updateOpacity();
  });
  slider = new Slider('#ex2', {
    formatter: function(value) {
      return 'Current opacity: ' + value + '%';
    }
  });
  slider.on('slide', function(sliderValue) {
    opacityTuple[1] = sliderValue / 100;
    updateOpacity();
  });
  slider = new Slider('#ex3', {
    formatter: function(value) {
      return 'Current opacity: ' + value + '%';
    }
  });
  slider.on('slide', function(sliderValue) {
    opacityTuple[2] = sliderValue / 100;
    updateOpacity();
  });

  slider = new Slider('#ex4', {
    formatter: function(value) {
      return 'Current replusion: ' + value;
    }
  });
  slider.on('slide', function(sliderValue) {
    graphRenderer.updateCharge(-1*sliderValue)
  });
  slider = new Slider('#ex5', {
    formatter: function(value) {
      return 'Current link distance: ' + value;
    }
  });
  slider.on('slide', function(sliderValue) {
    graphRenderer.updateLinkDistance(sliderValue)
  });

};

$(function() {
  init();
});
